{
    "_comment_gpu_id_": "gpu_id: 取值0/1，指定训练所用gpu第1块/第2块",
    "_comment_train_data_file_": "train_data_file: 指定训练数据所在目录，默认为“./data/converted/train_data”",
    "_comment_test_data_file_": "test_data_file: 指定测试数据所在目录，默认为“./data/converted/test_data”",
    "_comment_eval_data_file_": "eval_data_file: 指定验证数据源所在目录，默认为“./data/converted/eval_data”",
    "_comment_output_dir_": "output_dir: 模型保存目录",
    "_comment_result_dir_": "result_dir: 测试结果保存目录数据",
    "_comment_do_train_": "do_train: true/false 表示是否运行训练过程",
    "_comment_do_eval_": "do_eval: true/false 表示是否运行验证过程",
    "_comment_do_predict_": "do_predict: true/false 表示是否运行测试过程",
    "_comment_train_batch_size_": "train_batch_size: 取整数，默认32，表示批量训练数据数量",
    "_comment_eval_batch_size_": "eval_batch_size: 取整数，默认32，表示批量验证数据数量",
    "_comment_predict_batch_size_": "predict_batch_size: 取整数，默认32，表示批量测试数据数量",
    "_comment_vocab_file_": "vocab_file: 默认值“./data/converted/all_vocab_uniq.txt”。词汇表文件路径",
    "_comment_bert_config_file_": "bert_config_file: 默认值“./configs/bert_config_main.json”，transformer模型参数配置路径 ",
    "_comment_main_feature_": "main_feature: 取值“pack”/“app”, 指明主要特征是app或是包名，会影响模型选择app或包名类型特征，默认为“pack”。",
    "_comment_max_seq_length_": "max_seq_length：取整数, 指定输入特征最长长度（默认200个）",
    "_comment_max_type_length_": "max_type_length：取整数, 指定所用的（app或包名）类型特征的个数（不足此数目的特征会被程序自动补0）",
    "_comment_learning_rate_": "learning_rate：取浮点数, 模型学习率",
    "_comment_loss_weights_": "loss_weights：列表，每一个值属于[0, 1], 用于指定各层级损失的重要性",
    "_comment_std_out_idx_": "std_out_idx：整数，指定哪一层级作为输出，从0开始计数。默认取4，表示输出预测的申完用户",
    "_comment_init_ckpt_": "init_ckpt：string，默认空，指定继续训练时要加载的模型路径",
    "_comment_num_train_epochs_": "num_train_epochs：取整数，默认30，影响模型迭代训练次数（以及时长）",
    "_comment_load_model_": "load_model：字符串，默认为空，预测时要加载的模型路径",
    "_comment_check_freq_": "check_freq：取整数，默认1000，表示每1000个训练批次进行一次验证",
    "_comment_save_freq_": "save_freq：取整数，默认1000，表示每1000个训练批次保存一次模型",
    "_comment_max_save_": "max_save：取整数，默认50，最多保留最新的50个模型",
    "_comment_warmup_proportion_": "warmup_proportion：取值[0, 1]，默认0.1，使用1/10的数据进行学习率预热",
    "_comment_threshold_": "threshold：取值[0, 1]，默认0.8，指定测试时计算准确率、召回率时所取的阈值",
    "_comment_use_tpu_": "use_tpu：true/false，默认false，表示未使用tpu",
    "gpu_id": "0",
    "train_data_file": "./data/converted/train_data",
    "test_data_file": "./data/converted/test_data",
    "eval_data_file": "./data/converted/test_data",
    "output_dir": "./checkpoint/",
    "result_file": "./result/test.prob.result",
    "do_train": true,
    "do_eval": true,
    "do_predict": false,
    "init_ckpt": "",
    "train_batch_size": 32,
    "eval_batch_size": 32,
    "predict_batch_size": 32,
    "vocab_file": "./data/converted/all_vocab_uniq.txt",
    "bert_config_file": "./configs/bert_config_main.json",
    "max_seq_length": 200,
    "max_type_length": 3,
    "learning_rate": 0.0001,
    "main_feature": "pack",
    "loss_weights": [
        0,
        0,
        0.5,
        1.0,
        1.0,
        1.0
    ],
    "std_out_idx": 4,
    "load_model": "",
    "num_train_epochs": 30.0,
    "check_freq": 1000,
    "save_freq": 3000,
    "max_save": 50,
    "threshold": 0.8,
    "warmup_proportion": 0.1,
    "use_tpu": false,
    "log_file": "./log/train_log",
    "metric_weights": [
        0,
        0.7,
        1,
        0.9,
        0.5,
        0.7
    ],
    "cate_size": 232,
    "cate_dict": "./configs/package_cate_ids.txt"
}